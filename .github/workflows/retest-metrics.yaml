name: Hourly Retest Metrics Analysis

on:
  schedule:
    # Run every hour
    - cron: '0 * * * *'

  # Allow manual trigger
  workflow_dispatch:
    inputs:
      days_back:
        description: 'Number of days to analyze'
        required: false
        default: '7'
        type: string

permissions:
  contents: write

jobs:
  analyze-github-retests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install prometheus-client requests

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Start Pushgateway
        run: |
          echo "🚀 Starting Pushgateway..."
          docker run -d --name pushgateway -p 9091:9091 prom/pushgateway
          sleep 5

      - name: Analyze GitHub repos for retests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PROMETHEUS_PUSHGATEWAY: "localhost:9091"
        run: |
          echo "🔍 Analyzing retest metrics for GitHub repos..."
          python3 analyze_github_flakiness.py

      - name: Push metrics to Grafana Cloud via Prometheus
        env:
          GRAFANA_CLOUD_URL: ${{ secrets.GRAFANA_CLOUD_URL }}
          GRAFANA_CLOUD_USER: ${{ secrets.GRAFANA_CLOUD_USER }}
          GRAFANA_CLOUD_TOKEN: ${{ secrets.GRAFANA_CLOUD_TOKEN }}
        run: |
          echo "📝 Creating Prometheus config..."
          cat > /tmp/prometheus.yml <<EOF
          global:
            scrape_interval: 5s
          scrape_configs:
            - job_name: 'pushgateway'
              honor_labels: true
              static_configs:
                - targets: ['localhost:9091']
          remote_write:
            - url: ${GRAFANA_CLOUD_URL}
              basic_auth:
                username: ${GRAFANA_CLOUD_USER}
                password: ${GRAFANA_CLOUD_TOKEN}
          EOF

          echo "🔄 Starting Prometheus to push metrics to Grafana Cloud..."
          docker run -d --name prometheus --network host -v /tmp/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus
          echo "⏳ Waiting 30 seconds for Prometheus to scrape and push..."
          sleep 30
          echo "✅ Metrics should now be in Grafana Cloud!"
          docker stop prometheus pushgateway || true

      - name: Commit and push results
        run: |
          # Add all JSON result files
          git add github_flakiness_*.json || true

          # Check if there are changes to commit
          if git diff --cached --quiet; then
            echo "📊 No changes to commit"
          else
            echo "📊 Committing new retest metrics..."
            git commit -m "chore: update GitHub retest metrics [bot]"
            git pull --rebase origin main || git pull --rebase origin master || true
            git push
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: retest-metrics-${{ github.run_number }}
          path: |
            github_flakiness_*.json
          retention-days: 90

  analyze-gitlab-retests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install prometheus-client requests

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Analyze GitLab repos for retests
        env:
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
          PROMETHEUS_PUSHGATEWAY: ${{ secrets.PROMETHEUS_PUSHGATEWAY }}
          GRAFANA_CLOUD_URL: ${{ secrets.GRAFANA_CLOUD_URL }}
          GRAFANA_CLOUD_USER: ${{ secrets.GRAFANA_CLOUD_USER }}
          GRAFANA_CLOUD_TOKEN: ${{ secrets.GRAFANA_CLOUD_TOKEN }}
        run: |
          echo "🔍 Analyzing retest metrics for GitLab repos..."
          python3 analyze_gitlab_flakiness.py

      - name: Commit and push results
        run: |
          # Add all JSON result files
          git add gitlab_flakiness_*.json || true

          # Check if there are changes to commit
          if git diff --cached --quiet; then
            echo "📊 No changes to commit"
          else
            echo "📊 Committing new retest metrics..."
            git commit -m "chore: update GitLab retest metrics [bot]"
            git pull --rebase origin main || git pull --rebase origin master || true
            git push
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: gitlab-metrics-${{ github.run_number }}
          path: |
            gitlab_flakiness_*.json
          retention-days: 90
